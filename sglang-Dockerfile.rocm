# ==============================================================================
# Unified Dockerfile for SGLang on AMD Radeon RX 7900 Series (gfx1100)
#
# BASE OS: Ubuntu 24.04 (Noble) for native Python 3.12 support.
# This file adapts the multi-stage build process from vLLM's Dockerfile.rocm_base
# to compile all dependencies from source and then install SGLang.
# ==============================================================================

# --- Build Arguments (Configured for gfx1100 on Ubuntu 24.04) ---
ARG BASE_IMAGE=rocm/dev-ubuntu-24.04:7.0-complete
ARG TRITON_BRANCH="f9e5bf54"
ARG TRITON_REPO="https://github.com/ROCm/triton.git"
ARG PYTORCH_BRANCH="b2fb6885"
ARG PYTORCH_VISION_BRANCH="v0.23.0"
ARG PYTORCH_REPO="https://github.com/ROCm/pytorch.git"
ARG PYTORCH_VISION_REPO="https://github.com/pytorch/vision.git"
ARG AITER_BRANCH="2ab9f4cd"
ARG AITER_REPO="https://github.com/ROCm/aiter.git"
ARG PYTHON_VERSION=3.12

# --- GFX1100 Specific Settings ---
ARG PYTORCH_ROCM_ARCH=gfx1100
ARG AITER_ROCM_ARCH=gfx1100
ARG FA_BRANCH="0e60e394"
ARG FA_REPO="https://github.com/Dao-AILab/flash-attention.git"


# ==============================================================================
# STAGE 1: Base Environment Setup
# ==============================================================================
FROM ${BASE_IMAGE} AS base

# --- Re-declare ARGs to bring them into this build stage's scope ---
ARG PYTHON_VERSION
ARG PYTORCH_ROCM_ARCH
ARG AITER_ROCM_ARCH

# --- Environment Setup ---
ENV PATH=/opt/rocm/llvm/bin:/opt/rocm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV ROCM_PATH=/opt/rocm
ENV LD_LIBRARY_PATH=/opt/rocm/lib:/usr/local/lib:
ENV PYTORCH_ROCM_ARCH=${PYTORCH_ROCM_ARCH}
ENV AITER_ROCM_ARCH=${AITER_ROCM_ARCH}

WORKDIR /app
ENV DEBIAN_FRONTEND=noninteractive

# --- Python Installation (Simplified for Ubuntu 24.04) ---
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
       software-properties-common git curl sudo vim less libgfortran5 \
       python${PYTHON_VERSION} python${PYTHON_VERSION}-dev python${PYTHON_VERSION}-venv \
       python3-pip python-is-python3

# Install Python build dependencies
RUN pip install -U --break-system-packages --ignore-installed packaging 'cmake<4' ninja wheel 'setuptools<80' pybind11 Cython

# ==============================================================================
# STAGE 2: Build Dependencies from Source
# ==============================================================================

# --- Build Triton ---
FROM base AS build_triton
ARG TRITON_BRANCH
ARG TRITON_REPO
# CORRECTED: Removed "cd python" as setup.py is in the repo root for this commit
RUN git clone ${TRITON_REPO} \
    && cd triton \
    && git checkout ${TRITON_BRANCH} \
    && python3 setup.py bdist_wheel --dist-dir=dist \
    && mkdir -p /app/install && cp dist/*.whl /app/install

# --- Build PyTorch & Vision ---
FROM base AS build_pytorch
ARG PYTORCH_BRANCH
ARG PYTORCH_VISION_BRANCH
ARG PYTORCH_REPO
ARG PYTORCH_VISION_REPO
RUN git clone ${PYTORCH_REPO} pytorch \
    && cd pytorch && git checkout ${PYTORCH_BRANCH} \
    && pip install --break-system-packages --ignore-installed -r requirements.txt && git submodule update --init --recursive \
    && python3 tools/amd_build/build_amd.py \
    && CMAKE_PREFIX_PATH=$(python3 -c 'import sys; print(sys.prefix)') python3 setup.py bdist_wheel --dist-dir=dist \
    && pip install --break-system-packages --ignore-installed dist/*.whl \
    && git clone ${PYTORCH_VISION_REPO} /app/vision \
    && cd /app/vision && git checkout ${PYTORCH_VISION_BRANCH} \
    && python3 setup.py bdist_wheel --dist-dir=dist \
    && pip install --break-system-packages --ignore-installed dist/*.whl \
    && mkdir -p /app/install && cp /app/pytorch/dist/*.whl /app/install \
    && cp /app/vision/dist/*.whl /app/install

# --- Build AITer ---
FROM base AS build_aiter
ARG AITER_BRANCH
ARG AITER_REPO
RUN --mount=type=bind,from=build_pytorch,src=/app/install/,target=/install \
    pip install --break-system-packages --ignore-installed /install/*.whl
RUN git clone --recursive ${AITER_REPO} \
    && cd aiter \
    && git checkout ${AITER_BRANCH} \
    && git submodule update --init --recursive \
    && pip install --break-system-packages --ignore-installed -r requirements.txt \
    && pip install --break-system-packages --ignore-installed pyyaml && PREBUILD_KERNELS=1 GPU_ARCHS=${AITER_ROCM_ARCH} python3 setup.py bdist_wheel --dist-dir=dist \
    && mkdir -p /app/install && cp /app/aiter/dist/*.whl /app/install

# ==============================================================================
# STAGE 3: Collate Wheels
# ==============================================================================
FROM base AS debs
RUN mkdir /app/debs
RUN --mount=type=bind,from=build_triton,src=/app/install/,target=/install \
    cp /install/*.whl /app/debs
RUN --mount=type=bind,from=build_pytorch,src=/app/install/,target=/install \
    cp /install/*.whl /app/debs
RUN --mount=type=bind,from=build_aiter,src=/app/install/,target=/install \
    cp /install/*.whl /app/debs

# ==============================================================================
# STAGE 4: Final Image Assembly
# ==============================================================================
FROM base AS final
ARG SGL_REPO="https://github.com/sgl-project/sglang.git"
ARG SGL_BRANCH="main"

# Install all the dependencies we compiled in previous stages
RUN --mount=type=bind,from=debs,src=/app/debs,target=/install \
    pip install --break-system-packages --ignore-installed /install/*.whl

# Clone and Install SGLang
RUN git clone ${SGL_REPO} /app/sglang \
    && cd /app/sglang \
    && git checkout ${SGL_BRANCH} \
    && sed -i '/flashinfer/d' python/pyproject.toml \
    && python3 -m pip --no-cache-dir install --break-system-packages --ignore-installed -e "python[all_hip]"

# Clean up apt cache to reduce image size
RUN rm -rf /var/lib/apt/lists/*

# Performance environment variables
ENV HIP_FORCE_DEV_KERNARG=1
ENV HSA_NO_SCRATCH_RECLAIM=1
ENV SGLANG_SET_CPU_AFFINITY=1
ENV SGLANG_ALLOW_OVERWRITE_LONGER_CONTEXT_LEN=1
ENV SGLANG_USE_AITER=1

CMD ["/bin/bash"]
